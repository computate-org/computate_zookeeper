---
- name: Check if javac command exists
  stat:
    path: /usr/bin/javac
  register: JAVAC_EXISTS
- name: Install {{ ZOOKEEPER_NAME }} dependencies. 
  package:
    name: [java-latest-openjdk-devel,java-latest-openjdk,gnu-tar]
  become: yes
  when: ansible_pkg_mgr != 'homebrew'
- name: Install {{ ZOOKEEPER_NAME }} dependencies. 
  package:
    name: [openjdk,gnu-tar]
  when: ansible_pkg_mgr == 'homebrew'
- name: Link openjdk to Library
  shell: ln -sfn /usr/local/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk
  args:
    creates: /Library/Java/JavaVirtualMachines/openjdk.jdk
  become: true
  when: ansible_pkg_mgr == 'homebrew'
- name: Create the {{ ZOOKEEPER_NAME }} source directory {{ ZOOKEEPER_SRC }}. 
  file:
    name: "{{ ZOOKEEPER_SRC }}"
    state: directory
    owner: "{{ USER_NAME }}"
  become: yes
- name: Download the {{ ZOOKEEPER_NAME }} application. 
  get_url:
    url: "{{ ZOOKEEPER_DOWNLOAD_URL }}"
    dest: "{{ ZOOKEEPER_DOWNLOAD_DEST }}"
    checksum: "sha512:{{ ZOOKEEPER_DOWNLOAD_SHA512 }}"
- name: Create the {{ ZOOKEEPER_NAME }} install directory {{ ZOOKEEPER_OPT }}. 
  file:
    name: "{{ ZOOKEEPER_OPT }}"
    state: directory
    owner: "{{ USER_NAME }}"
  become: yes
- name: Install {{ ZOOKEEPER_NAME }} into the {{ ZOOKEEPER_OPT }} install directory. 
  unarchive:
    src: "{{ ZOOKEEPER_DOWNLOAD_DEST }}"
    dest: "{{ ZOOKEEPER_OPT }}"
    remote_src: yes
    extra_opts: [--strip-components=1]
- name: Create the {{ ZOOKEEPER_NAME }} install directory {{ ZOOKEEPER_OPT }}. 
  file:
    name: "{{ ZOOKEEPER_OPT }}"
    state: directory
- name: Create the {{ ZOOKEEPER_NAME }} config file {{ ZOOKEEPER_CONF }}. 
  template:
    src: zookeeper_config.j2
    dest: "{{ ZOOKEEPER_CONF }}"
- name: Create the {{ ZOOKEEPER_NAME }} systemd service {{ ZOOKEEPER_SYSTEMD }}. 
  template:
    src: zookeeper_systemd_service.j2
    dest: "{{ ZOOKEEPER_SYSTEMD }}"
  become: yes
  when: ansible_pkg_mgr != 'homebrew'
- name: Reload the services. 
  systemd:
    daemon_reload: yes
  become: yes
  when: ansible_pkg_mgr != 'homebrew'
- name: Start and enable the {{ ZOOKEEPER_NAME }} service. 
  service:
    name: "{{ ZOOKEEPER_SERVICE }}"
    enabled: yes
    state: restarted
  become: yes
  when: ansible_pkg_mgr != 'homebrew'

- name: Create the {{ ZOOKEEPER_NAME }} launchd service.
  template:
    src: zookeeper_launchd_service.j2
    dest: "~/Library/LaunchAgents/org.zookeeper.plist"
  when: ansible_pkg_mgr == 'homebrew'
- name: Load the {{ ZOOKEEPER_NAME }} launchd service.
  shell: launchctl load ~/Library/LaunchAgents/org.zookeeper.plist
  when: ansible_pkg_mgr == 'homebrew'
- name: Stop the {{ ZOOKEEPER_NAME }} launchd service before restarting it.
  shell: /opt/zookeeper/bin/zkServer.sh stop
  when: ansible_pkg_mgr == 'homebrew'
- name: Start the {{ ZOOKEEPER_NAME }} launchd service.
  shell: /opt/zookeeper/bin/zkServer.sh start
  when: ansible_pkg_mgr == 'homebrew'

